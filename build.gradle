plugins {
    id 'java-library'
    id 'maven-publish'
    id 'dev.architectury.loom' version '1.2-SNAPSHOT'
}



sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17


version = project.mod_version
group = project.maven_group
archivesBaseName = project.archives_base_name + "-" + project.minecraft_dependency

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))


loom {
    silentMojangMappingsLicense()
}

sourceSets.main.resources { srcDir 'src/generated/resources' }


repositories {
    mavenCentral()
    maven {
        url = 'https://maven.nova-committee.cn/releases'
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()
    forge "net.minecraftforge:forge:${project.minecraft_version}-${project.forge_version}"
    implementation 'com.google.code.findbugs:jsr305:3.0.2'
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor "org.projectlombok:lombok:1.18.24"
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archives_base_name}" }
    }
}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version.toString()
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
    options.release = 17
}


publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            groupId =  project.group
            artifactId = project.archivesBaseName
            version = project.version
        }
    }
    repositories {
        if (System.getenv('MAVEN_USERNAME') != null && System.getenv('MAVEN_PASSWORD') != null) {
            maven {
                name 'release'
                url = 'https://maven.nova-committee.cn/releases'

                credentials {
                    username System.getenv('MAVEN_USERNAME')
                    password System.getenv('MAVEN_PASSWORD')
                }
            }
        }
    }
}
